(defwidget _battery [capacity status]
  (label :class "battery-label"
         :text "${status == 'Charging' ? "" : capacity <= 10 ? "" :  ""}${
                  capacity < 15 ? "" :
                  capacity < 30 ? "" :
                  capacity < 60 ? "" :
                  capacity < 90 ? "" : ""} ${capacity}%"))

(defwidget _volume [mute volume]
  (label :class "volume-label"
         :text "${mute == 'yes' ? "婢" :
                  volume < 25 ? "奄" :
                  volume < 60 ? "奔" :
                  "墳"} ${volume}%"))


(defwidget _graph_0_100 [value]
  (graph :value value
         :thickness 2.0
         :time-range "30s"
         :min 0
         :max 100
         :dynamic true
         :line-style "round"))


(defwidget _network_speed [up down]
  (box :class "network-speed-label" :space-evenly false
    ; for some reason EWW_NET reports double of what is actually going through
    ; (label :text "RAW:(${round(up / 2, 0)}/${round(down / 2, 0)})")
    (label :text "|")
    (label :text "⇧${strlength(round(up/2,0)) % 3 == 0 ? '' : strlength(round(up/2,0)) % 3 == 1 ? '  ' : ' '}${round(up / 2000000, 1) >= 1 ? round(up / 2000000, 0) : round(up / 2000, 1) >= 1 ? round(up / 2000, 0) : round(up / 2, 0)}")
    (label :text "${round(up / 2000000, 1) >= 1 ? 'M' : round(up / 2000, 1) >= 1 ? 'k' : 'b'}")
    (label :text "|")
    (label :text "⇩${strlength(round(down/2,0)) % 3 == 0 ? '' : strlength(round(down/2,0)) % 3 == 1 ? '  ' : ' '}${round(down / 2000000, 1) >= 1 ? round(down / 2000000, 0) : round(down / 2000, 1) >= 1 ? round(down / 2000, 0) : round(down / 2, 0)}")
    (label :text "${round(down / 2000000, 1) >= 1 ? 'M' : round(down / 2000, 1) >= 1 ? 'k' : 'b'}")
    (label :text "|")))
