#!/bin/sh

export XDG_CONFIG_HOME="${HOME}/.config"
export XDG_CACHE_HOME="${HOME}/.cache"
export XDG_STATE_HOME="${HOME}/.local/state"
export XDG_DATA_HOME="${HOME}/.local/share"

export PATH="${HOME}/.local/bin:${HOME}/.cargo/bin:${PATH}"
export TMPDIR="${TMPDIR:-/tmp}"

export EDITOR=vi
export VISUAL=vi
if [ -x "$(command -v vim)" ]; then
	export MANPAGER="vim +MANPAGER --not-a-term -c 'setlocal ts=8 ft=man nomod nolist nonu' -c 'nmap q :q!' -"
	export EDITOR=vim
	export VISUAL=vim
fi
if [ -x "$(command -v nvim)" ]; then
	export MANPAGER="nvim +Man! -c 'nmap q :q!'"
	export EDITOR=nvim
	export VISUAL=nvim
fi
if [ -x "$(command -v nvim)" ] && [ -x "$(command -v lvim)" ]; then
	export EDITOR=lvim
	export VISUAL=lvim
fi

# Install new npm packages globally *for the user* so it won't need `sudo'
npm_directory="${XDG_DATA_HOME}/npm-global"
mkdir -p "${npm_directory}"
export NPM_CONFIG_PREFIX="${npm_directory}"
export PATH="${PATH}:${npm_directory}"

# snippet generated by 'conda init'
__conda_setup=$("${HOME}/anaconda3/bin/conda" 'shell.bash' 'hook' 2> /dev/null)
# shellcheck disable=2181
if [ $? -eq 0 ]; then
	eval "$__conda_setup"
else
	if [ -f "${HOME}/anaconda3/etc/profile.d/conda.sh" ]; then
		. "${HOME}/anaconda3/etc/profile.d/conda.sh"
	else
		export PATH="${HOME}/anaconda3/bin:$PATH"
	fi
fi
unset __conda_setup
